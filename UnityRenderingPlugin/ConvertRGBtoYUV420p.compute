// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#pragma kernel Condense
 
RWStructuredBuffer<int> bufColors;

// with cs.SetTexture
Texture2D<float4> In;
RWTexture2D<float4> Out;
RWStructuredBuffer<uint> Out2;
RWStructuredBuffer<uint> CondensedPixels;
uint Pitch;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!
	float4 pixel = In[id.xy];
	float red   = pixel.x;
	float green = pixel.y;
	float blue  = pixel.z;

	Out2[id.y * Pitch * 3 + id.x * 3    ] = red   * 255.f;
	Out2[id.y * Pitch * 3 + id.x * 3 + 1] = green * 255.f;
	Out2[id.y * Pitch * 3 + id.x * 3 + 2] = blue  * 255.f;
}

[numthreads(8,8,1)]
void Condense (uint3 id : SV_DispatchThreadID)
{
	CondensedPixels[id.y * Pitch + id.x] =   Out2[id.y * Pitch * 3 + id.x * 3    ] << 16
	                                       | Out2[id.y * Pitch * 3 + id.x * 3 + 1] <<  8
										   | Out2[id.y * Pitch * 3 + id.x * 3 + 2];

	Out[id.xy]  = float4(((CondensedPixels[id.y * Pitch + id.x] & 0xFF0000) >> 16) / 255.f,
	                     ((CondensedPixels[id.y * Pitch + id.x] & 0x00FF00) >>  8) / 255.f,
						 ((CondensedPixels[id.y * Pitch + id.x] & 0x0000FF)      ) / 255.f,
						 0);
}